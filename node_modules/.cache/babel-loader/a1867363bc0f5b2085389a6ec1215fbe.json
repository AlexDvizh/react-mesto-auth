{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\dev\\\\mesto-react\\\\mesto-react\\\\src\\\\components\\\\App\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from '../Header/Header.js';\nimport Footer from '../Footer/Footer.js';\nimport Main from '../Main/Main.js';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm.js';\nimport ImagePopup from '../ImagePopup/ImagePopup.js';\nimport api from '../../utils/api.js';\nimport EditProfilePopup from '../EditProfilePopup/EditProfilePopup.js';\nimport EditAvatarPopup from '../EditAvatarPopup/EditAvatarPopup.js';\nimport AddPlacePopup from '../AddPlacePopup/AddPlacePopup.js';\nimport { CurrentUserContext } from '../../context/CurrentUserContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //хук состояния открытия поп-апа профиля\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false); //хук состояния открытия поп-апа добавления новой карточки\n\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false); //хук состояния открытия поп-апа аватара\n\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false); //хук состояния открытия поп-апа большого фото\n\n  const [selectedCard, setSelectedCard] = React.useState(null); //хук состояния текущего пользователя\n\n  const [currentUser, setCurrentUser] = React.useState({}); //хук состояния карточек\n\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    api.getUserInfoFromServer().then(data => {\n      setCurrentUser(data);\n    }).catch(err => {\n      console.log(err);\n    });\n    api.getCards().then(data => {\n      setCards(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.setLikeStatus(card._id, isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardDelete(card) {\n    card.remove();\n    api.deleteCard(card._id).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleUpdateUser(info) {\n    api.setUserInfoFromServer(info).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar(info) {\n    api.setUserAvatar(info).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api.addNewCard(card).then(data => {\n      console.log(data);\n      setCards([data, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick,\n        cards: cards,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"delete-card\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        submitButton: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        isOpen: selectedCard,\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HtR6p/EQjlIvXq3F/wbH5OMFrAQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Desktop/dev/mesto-react/mesto-react/src/components/App/App.js"],"names":["React","Header","Footer","Main","PopupWithForm","ImagePopup","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","CurrentUserContext","App","isEditProfilePopupOpen","setEditProfilePopupOpen","useState","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","useEffect","getUserInfoFromServer","then","data","catch","err","console","log","getCards","handleCardLike","card","isLiked","likes","some","i","_id","setLikeStatus","newCard","state","map","c","handleCardDelete","remove","deleteCard","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","closeAllPopups","handleCardClick","handleUpdateUser","info","setUserInfoFromServer","handleUpdateAvatar","setUserAvatar","handleAddPlaceSubmit","addNewCard"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from '../Header/Header.js';\nimport Footer from '../Footer/Footer.js';\nimport Main from '../Main/Main.js';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm.js';\nimport ImagePopup from '../ImagePopup/ImagePopup.js';\nimport api from '../../utils/api.js';\nimport EditProfilePopup from '../EditProfilePopup/EditProfilePopup.js';\nimport EditAvatarPopup from '../EditAvatarPopup/EditAvatarPopup.js'; \nimport AddPlacePopup from '../AddPlacePopup/AddPlacePopup.js';\n\nimport { CurrentUserContext } from '../../context/CurrentUserContext.js';\n\nfunction App() {\n  //хук состояния открытия поп-апа профиля\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false); \n  //хук состояния открытия поп-апа добавления новой карточки\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  //хук состояния открытия поп-апа аватара\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  //хук состояния открытия поп-апа большого фото\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  //хук состояния текущего пользователя\n  const [currentUser, setCurrentUser] = React.useState({});\n  //хук состояния карточек\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    api\n      .getUserInfoFromServer()\n      .then((data) => {\n        setCurrentUser(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    api\n      .getCards()\n      .then((data) => {\n        setCards(data)\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .setLikeStatus(card._id, isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardDelete(card) {\n\n    card.remove();\n\n    api\n      .deleteCard(card._id)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true)\n  }\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true)\n  }\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true)\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleUpdateUser(info) {\n    api\n      .setUserInfoFromServer(info)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleUpdateAvatar(info) {\n    api\n      .setUserAvatar(info)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api\n      .addNewCard(card)\n      .then((data) => {\n        console.log(data)\n        setCards([data, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header />\n        <Main \n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n        <Footer />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <AddPlacePopup \n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n        />\n        <PopupWithForm \n          name='delete-card' \n          title='Вы уверены?'\n          submitButton='Да'\n        />\n        <EditAvatarPopup \n          isOpen={isEditAvatarPopupOpen} \n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar} \n        />\n        <ImagePopup\n          isOpen={selectedCard}\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}