{"version":3,"sources":["images/logo.svg","components/Header.js","components/Footer.js","images/pen.svg","images/plus.svg","images/delete.svg","images/heart.svg","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/Login.js","components/Register.js","components/ProtectedRoute.js","utils/auth.js","images/success-icon.svg","images/fail-icon.svg","components/InfoTooltip.js","components/App.js","index.js"],"names":["Header","userEmailOnHeader","logoutProfile","location","useLocation","className","src","headerLogo","alt","pathname","to","onClick","Footer","Date","getFullYear","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","userInfo","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","name","type","imgDelete","imgLike","length","Main","props","avatar","onEditAvatar","aria-label","onEditProfile","imgEditButton","about","onAddPlace","title","imgAddButton","cards","map","item","PopupWithForm","isOpen","onClose","onSubmit","children","submitButton","ImagePopup","Boolean","api","url","token","this","_address","_token","res","ok","json","Promise","reject","status","fetch","headers","authorization","then","_getResponse","data","method","body","JSON","stringify","info","cardId","checkElementLike","EditProfilePopup","useState","setName","description","setDescription","useEffect","evt","preventDefault","onUpdateUser","id","value","onChange","target","placeholder","required","minLength","maxLength","EditAvatarPopup","userAvatar","useRef","onUpdateAvatar","current","ref","AddPlacePopup","cardTitle","setCardTitle","cardLink","setCardLink","Login","onLogin","email","setEmail","password","setPassword","Register","onRegister","ProtectedRoute","Component","component","loggedIn","BASE_URL","getResponse","InfoTooltip","successIcon","failIcon","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","setCards","setLoggedIn","isInfoTooltipOpen","setIsInfoTooltipOpen","message","setMessage","setUserEmailOnHeader","history","useHistory","closeAllPopups","getUserInfoFromServer","catch","err","console","log","getCards","localStorage","getItem","validityToken","push","checkToken","Provider","removeItem","setLikeStatus","newCard","state","c","deleteCard","filter","exact","path","setItem","register","setUserInfoFromServer","addNewCard","setUserAvatar","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.dca00144.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.1f1e9591.svg\";","import React from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport headerLogo from '../images/logo.svg'\r\n\r\nfunction Header({userEmailOnHeader, logoutProfile}) {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <header className=\"header\">\r\n        <img className=\"header__logo\" src={headerLogo} alt=\"Логотип Место\" />\r\n        <div className=\"header__links\">\r\n          <p className=\"header__link header__link_email\">\r\n            {location.pathname === \"/\" ? userEmailOnHeader : \"\"}\r\n          </p>\r\n          <Link to={\r\n            location.pathname === \"/sign-up\"\r\n            ? \"/sign-in\" \r\n            : location.pathname === \"/sign-in\"\r\n            ? \"/sign-up\"\r\n            : \"/sign-in\"\r\n            }\r\n            className=\"header__link header__link_exit\"\r\n            onClick={location.pathname === \"/\" ? logoutProfile : () => {}}\r\n          >\r\n            {\r\n              location.pathname === \"/sign-up\"\r\n              ? \"Войти\"\r\n              : location.pathname === \"/sign-in\"\r\n              ? \"Регистрация\"\r\n              : \"Выйти\"\r\n            }\r\n          </Link>\r\n        </div>\r\n    </header>\r\n  )\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n  <footer className=\"footer\">\r\n        <p className=\"footer__copyright\">© Mesto Russia {new Date().getFullYear()}</p>\r\n  </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/pen.8667ac4a.svg\";","export default __webpack_public_path__ + \"static/media/plus.d86bb2ed.svg\";","export default __webpack_public_path__ + \"static/media/delete.cbc09a89.svg\";","export default __webpack_public_path__ + \"static/media/heart.49570bcb.svg\";","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport imgDelete from '../images/delete.svg'; \r\nimport imgLike from '../images/heart.svg';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n\r\nfunction Card({card, onCardClick, onCardLike, onCardDelete}) {\r\n\r\n  const userInfo = React.useContext(CurrentUserContext);\r\n\r\n  //вызываем обработчик handleCardClick из компонента Card\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  }\r\n\r\n  //обработчик клика лайка проброшенный из app\r\n  function handleLikeClick() {\r\n    onCardLike(card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    onCardDelete(card);\r\n  }\r\n\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = card.owner._id === userInfo._id;\r\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = (\r\n    `element__delete ${!isOwn ? 'element__delete_disabled' : ''}`\r\n  );\r\n  \r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = card.likes.some(i => i._id === userInfo._id);\r\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n  const cardLikeButtonClassName = (`element__desc-like ${!isLiked ? '' : 'element__desc-like_type_off'}`);\r\n\r\n  return (\r\n    <article className=\"element\">\r\n      <div className=\"element__photo-wrap\">\r\n        <img className=\"element__photo\" src={card.link} alt={card.name} onClick={handleClick} />\r\n        <button className={cardDeleteButtonClassName} type=\"button\"><img src={imgDelete} alt=\"Иконка урны\" onClick={handleDeleteClick} /></button>\r\n      </div>  \r\n      <div className=\"element__desc\">\r\n        <h2 className=\"element__desc-title\">{card.name}</h2>\r\n        <div className=\"element__like\">\r\n          <button className={cardLikeButtonClassName} type=\"button\"><img src={imgLike} alt=\"Иконка сердца\" onClick={handleLikeClick} /></button>\r\n          <p className=\"element__like_counter\">{card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport imgEditButton from '../images/pen.svg';\r\nimport imgAddButton from '../images/plus.svg';\r\nimport Card from './Card.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n\r\nfunction Main(props) {\r\n\r\n  const userInfo = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__avatar-wrap\">\r\n          <img className=\"profile__avatar\" alt=\"Фото Аватара\" src={userInfo.avatar}/>\r\n          <div \r\n            onClick={props.onEditAvatar} \r\n            aria-label=\"Редактировать аватар\"\r\n            className=\"profile__avatar-button\" />\r\n        </div>\r\n        <div className=\"profile__info\">\r\n          <h1 className=\"profile__title\">{userInfo.name}</h1>\r\n          <button \r\n            onClick={props.onEditProfile}\r\n            aria-label=\"Редактировать\" \r\n            type=\"button\" \r\n            className=\"profile__edit-button\">\r\n            <img src={imgEditButton} alt=\"Иконка ручки\" />\r\n          </button> \r\n          <p className=\"profile__subtitle\">{userInfo.about}</p> \r\n        </div>\r\n        <button \r\n          onClick={props.onAddPlace}\r\n          aria-label=\"Добавить фото\" \r\n          title=\"+\" type=\"button\" \r\n          className=\"profile__add-button\">\r\n          <img src={imgAddButton} alt=\"Иконка плюса\" />\r\n        </button>\r\n      </section>\r\n      <section className=\"elements\">\r\n        {\r\n          props.cards.map((item) => (\r\n            <Card \r\n              key={item._id}\r\n              card={item}\r\n              onCardClick={props.onCardClick}\r\n              onCardLike={props.onCardLike}\r\n              onCardDelete={props.onCardDelete}\r\n            />\r\n          ))\r\n        }\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n//  let popupVisibleClass;\r\n\r\n//   props.isOpen ? popupVisibleClass='popup_opened' : popupVisibleClass='';\r\n\r\n  return (\r\n    <div className={`popup popup_type_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\r\n      <div className=\"popup__content\">\r\n        <button type=\"button\" className=\"popup__close\" onClick={props.onClose} />\r\n        <form name={props.name} className=\"popup__form popup__form_profile\" onSubmit={props.onSubmit}>\r\n          <h3 className=\"popup__form-title\">{props.title}</h3>\r\n          {props.children}\r\n          <button type=\"submit\" className=\"popup__form-save\">{props.submitButton}</button>\r\n        </form>  \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default PopupWithForm;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  const isOpen = Boolean(props.card)\r\n\r\n  // let popupVisibleClass;\r\n\r\n  // card ? popupVisibleClass='popup_opened' : popupVisibleClass='';\r\n\r\n  return (\r\n    <div className={`popup popup_type_open ${props.isOpen ? 'popup_opened' : ''}`}>\r\n      <form name=\"photoViewForm\" className=\"popup__box\">\r\n        <img className=\"popup__image\" src={isOpen ? props.card.link : \"#\"} alt={isOpen ? props.card.name : \"\"} />\r\n        <button type=\"button\" className=\"popup__close popup__close-img\" onClick={props.onClose} />\r\n        <h3 className=\"popup__img-title\">{isOpen ? props.card.name : \"\"}</h3>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImagePopup;","class Api {\r\n  constructor(url, token) {\r\n    this._address = url;\r\n    this._token = token;\r\n  }\r\n\r\n  //получить ответ от сервера\r\n  _getResponse(res) {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка ${res.status}`);\r\n  }\r\n\r\n  //метод получения карточки от сервера\r\n  getCards() {\r\n    return fetch(`${this._address}cards`, {\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    }).then((res) => {\r\n        return this._getResponse(res);\r\n      });\r\n  }\r\n\r\n  //метод добавления новой карточки\r\n  addNewCard(data) {\r\n    return fetch(`${this._address}cards`, {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link\r\n      })\r\n    })\r\n    .then((res) => {\r\n        return this._getResponse(res);\r\n    });\r\n  }\r\n\r\n  //запрос информации о пользователе с сервера\r\n  getUserInfoFromServer() {\r\n    return fetch(`${this._address}users/me`, {\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    })\r\n    .then((res) => {\r\n      return this._getResponse(res);\r\n    });\r\n  }\r\n\r\n  //запрос изменения данных профиля\r\n  setUserInfoFromServer(info) {\r\n    return fetch(`${this._address}users/me`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: info.name, \r\n        about: info.about\r\n      })\r\n    })\r\n    .then((res) => {\r\n      return this._getResponse(res);\r\n    });\r\n  }\r\n\r\n  //запрос изменения фотографии аватара\r\n  setUserAvatar(data) {\r\n    return fetch(`${this._address}users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: data.avatar\r\n      })\r\n    }) \r\n    .then((res) => {\r\n      return this._getResponse(res);\r\n    });\r\n  }\r\n\r\n  //запрос на удаление карточки\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._address}cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    })\r\n    .then((res) => {\r\n      return this._getResponse(res);\r\n    });\r\n  }\r\n\r\n  //выбор запроса на добавление/удаление лайка исходя из состояния лайка\r\n  setLikeStatus(cardId, checkElementLike) {                     \r\n    return fetch(`${this._address}cards/likes/${cardId}`, {     \r\n      method: checkElementLike ? 'DELETE' : 'PUT',              \r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    })\r\n    .then((res) => {\r\n      return this._getResponse(res);\r\n    });\r\n  }\r\n}\r\n\r\nconst api = new Api('https://mesto.nomoreparties.co/v1/cohort-20/', '4a3cde67-2515-4699-b4fa-4d09b066c717');\r\nexport default api;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n\r\n\r\nfunction EditProfilePopup(props) {\r\n\r\n  const [name, setName] = React.useState('');\r\n  const [description, setDescription] = React.useState('');\r\n\r\n  const userInfo = React.useContext(CurrentUserContext);\r\n\r\n  function handleChangeName(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  function handleChangeDescription(evt) {\r\n    setDescription(evt.target.value);\r\n  }\r\n\r\n  //эффект обновления переменных состояния при изменении контекста\r\n  React.useEffect(() => {\r\n    setName(userInfo.name || '');\r\n    setDescription(userInfo.about || '');\r\n  }, [userInfo]);\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onUpdateUser({\r\n      name: name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <PopupWithForm \r\n      name='edit'\r\n      title='Редактировать профиль'\r\n      submitButton='Сохранить'\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input id=\"user-name\" name=\"userName\" className=\"popup__input popup__input_type_name\" type=\"text\" \r\n        value={name} onChange={handleChangeName} placeholder=\"Имя\" required minLength={2} maxLength={40} />\r\n      <span id=\"user-name-error\" className=\"popup__error\" />\r\n      <input id=\"user-job\" name=\"userJob\" className=\"popup__input popup__input_type_job\" type=\"text\" \r\n        value={description} onChange={handleChangeDescription} placeholder=\"О себе\" required minLength={2} maxLength={200} />\r\n      <span id=\"user-job-error\" className=\"popup__error\" />\r\n    </PopupWithForm>\r\n\r\n  )\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\n\r\nfunction EditAvatarPopup(props) {\r\n\r\n  const userAvatar = React.useRef();\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n  \r\n    props.onUpdateAvatar({\r\n      avatar: userAvatar.current.value\r\n    });\r\n  } \r\n\r\n  return (\r\n    <PopupWithForm \r\n      name='change-avatar' \r\n      title='Обновить аватар'\r\n      submitButton='Сохранить'\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input id=\"link-avatar\" name=\"linkAvatar\" className=\"popup__input popup__input_type_link-avatar\" \r\n        type=\"url\" placeholder=\"Ссылка на аватар\" ref={userAvatar} required />\r\n      <span id=\"link-avatar-error\" className=\"popup__error\" />\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\n\r\nfunction AddPlacePopup (props) {\r\n  const [cardTitle, setCardTitle] = React.useState('');\r\n  const [cardLink, setCardLink] = React.useState(''); \r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    props.onAddPlace({\r\n      name: cardTitle,\r\n      link: cardLink\r\n    })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if(props.isOpen === false) {\r\n      setCardTitle('');\r\n      setCardLink('');\r\n    }\r\n  }, [props.isOpen])\r\n\r\n  return (\r\n    <PopupWithForm \r\n      name='add' \r\n      title='Новое место'\r\n      submitButton='Создать'\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input id=\"name-photo\" name=\"namePhoto\" className=\"popup__input popup__input_type_photo-name\" \r\n      type=\"text\" placeholder=\"Название\" onChange={(evt) => setCardTitle(evt.target.value)} value={cardTitle} required minLength={2} maxLength={30} />\r\n      <span id=\"name-photo-error\" className=\"popup__error\" />\r\n      <input id=\"link-photo\" name=\"linkPhoto\" className=\"popup__input popup__input_type_link-photo\" \r\n      type=\"url\" placeholder=\"Ссылка на картинку\" onChange={(evt) => setCardLink(evt.target.value)} value={cardLink} required />\r\n      <span id=\"link-photo-error\" className=\"popup__error\" />\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup;","import { React, useState } from 'react';\r\n\r\nfunction Login({onLogin}) {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  function handleEmailChange(evt) {\r\n    setEmail(evt.target.value);\r\n  }\r\n\r\n  function handlePasswordChange(evt) {\r\n    setPassword(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onLogin(email, password);\r\n  }\r\n\r\n  return (\r\n    <form className=\"login-form\" onSubmit={handleSubmit}>\r\n      <h3 className=\"login-form__title\">Вход</h3>\r\n      <input className=\"login-form__input login-form__input_login-email\" placeholder=\"Email\" \r\n        type=\"email\" onChange={handleEmailChange} required />\r\n      <input className=\"login-form__input login-form__input_login-pass\" placeholder=\"Пароль\" \r\n        type=\"password\" onChange={handlePasswordChange} required />\r\n      <button className=\"login-form__button\" type=\"submit\">Войти</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Login;","import { React, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Register = ({onRegister}) => {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  function handleEmailChange(evt) {\r\n    setEmail(evt.target.value);\r\n  }\r\n\r\n  function handlePasswordChange(evt) {\r\n    setPassword(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onRegister(email, password);\r\n  }\r\n\r\n  return(\r\n    <form className=\"login-form\" onSubmit={handleSubmit}>\r\n      <h3 className=\"login-form__title\">Регистрация</h3>\r\n      <input className=\"login-form__input login-form__input_login-email\" placeholder=\"Email\" \r\n        type=\"email\" onChange={handleEmailChange} required />\r\n      <input className=\"login-form__input login-form__input_login-pass\" placeholder=\"Пароль\" \r\n        type=\"password\" onChange={handlePasswordChange} required/>\r\n      <button className=\"login-form__button\" type=\"submit\">Зарегистрироваться</button>\r\n      <div className=\"login-form__text\">\r\n        Уже зарегистрированы? \r\n        <Link to=\"/sign-in\" className=\"login-form__link\">Войти</Link>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({component: Component, ...props}) => {\r\n  return (\r\n    <Route>\r\n      { \r\n      () => props.loggedIn ? <Component {...props}/> : <Redirect to=\"/sign-in\"/>\r\n      }\r\n    </Route>\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute;","\r\nexport const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nfunction getResponse(res) {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка ${res.status}`);\r\n}\r\n\r\nexport const register = (password, email) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({password, email})\r\n  })\r\n  .then((res) => {\r\n    console.log(res)\r\n    return getResponse(res)\r\n  })\r\n};\r\n\r\nexport const authorization = (password, email) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({password, email})\r\n  })\r\n  .then((res) => {\r\n    return getResponse(res)\r\n  })\r\n}\r\n\r\nexport const validityToken = (token) => {\r\n  return fetch(`${BASE_URL}/user/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\" : `Bearer ${token}`\r\n    } \r\n  })\r\n  .then((res) => {\r\n    return getResponse(res)\r\n  })\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/success-icon.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/fail-icon.df8eddf6.svg\";","import React from 'react';\r\nimport successIcon from '../images/success-icon.svg';\r\nimport failIcon from '../images/fail-icon.svg';\r\n\r\nfunction InfoTooltip(props) {\r\n\r\n  return (\r\n    <div className={`popup popup_type_open ${props.isOpen ? 'popup_opened' : ''}`}>\r\n      <div className=\"infoTooltip\">\r\n        <img className=\"infoTooltip__image\" src={props.status ? successIcon : failIcon} />\r\n        <p className=\"infoTooltip__text\">\r\n          {props.status ? \"Вы успешно зарегистрировались!\" : \"Что-то пошло не так! Попробуйте ещё раз.\"}\r\n        </p>\r\n        <button type=\"button\" className=\"popup__close popup__close-img\" onClick={props.onClose} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InfoTooltip;","import React, { useState } from 'react';\nimport { Route, Redirect, Switch, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Main from './Main';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api.js';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup'; \nimport AddPlacePopup from './AddPlacePopup';\nimport Login from './Login.js';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport { register, authorization, validityToken } from '../utils/auth';\nimport InfoTooltip from './InfoTooltip';\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nfunction App() {\n  //хук состояния открытия поп-апа профиля\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false); \n  //хук состояния открытия поп-апа добавления новой карточки\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  //хук состояния открытия поп-апа аватара\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  //хук состояния открытия поп-апа большого фото\n  const [selectedCard, setSelectedCard] = useState(null);\n  //хук состояния текущего пользователя\n  const [currentUser, setCurrentUser] = useState({});\n  //хук состояния карточек\n  const [cards, setCards] = useState([]);\n  //хук авторизации пользователя(вошел в систему или нет)\n  const [loggedIn, setLoggedIn] = useState(false);\n  //хук состояния открытия поп-апа с оповещением при авторизации\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  //хук сообщения об успешной/неудачной авторизации\n  const [message, setMessage] = useState(false);\n  //хук получения почты пользователя, для отображения в хедере\n  const [userEmailOnHeader, setUserEmailOnHeader] = useState('');\n  const history = useHistory();\n\n  React.useEffect(() => {\n    api\n      .getUserInfoFromServer()\n      .then((data) => {\n        setCurrentUser(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    api\n      .getCards()\n      .then((data) => {\n        setCards(data)\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    checkToken();\n  })\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .setLikeStatus(card._id, isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardDelete(card) {\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        setCards(cards.filter(i => i._id !== card._id))\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true)\n  }\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true)\n  }\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true)\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoTooltipOpen(false);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleUpdateUser(info) {\n    api\n      .setUserInfoFromServer(info)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  \n  function handleUpdateAvatar(info) {\n    api\n      .setUserAvatar(info)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api\n      .addNewCard(card)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function onRegister(email, password) {\n    register(password, email)\n      .then((res) => {\n        setIsInfoTooltipOpen(true);\n        if(res) {\n          setMessage(true);\n          history.push('/sign-in');\n        }\n      })\n      .catch(() => {\n        setMessage(false);\n        setIsInfoTooltipOpen(true);\n      });\n  }\n\n  function onLogin(email, password) {\n    authorization(password, email)\n      .then((res) => {\n        if(res) {\n          setLoggedIn(true);\n          setUserEmailOnHeader(email);\n          history.push('/');\n          localStorage.setItem('jwt', res.token);\n        }\n      })\n      .catch(() => {\n        setMessage(false);\n        setIsInfoTooltipOpen(true);\n      });\n  }\n\n  function checkToken() {\n    const token = localStorage.getItem('jwt');\n    if(token) {\n      validityToken(token)\n      .then((res) => {\n        if(res) {\n          setUserEmailOnHeader(res.data.email)\n        };\n        setLoggedIn(true);\n        history.push('/');\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    }\n  }\n\n  function logoutProfile() {\n    localStorage.removeItem('jwt');\n    history.push('/sign-in');\n    setLoggedIn(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header \n          userEmailOnHeader={userEmailOnHeader}\n          logoutProfile={logoutProfile}\n        />\n\n        <Switch>\n          <ProtectedRoute\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onCardClick={handleCardClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n            component={Main}\n            exact path=\"/\"\n            loggedIn={loggedIn}\n          />\n          <ProtectedRoute \n            component={Footer}\n            exact path=\"/\"\n            loggedIn={loggedIn}\n          />\n          <Route path=\"/sign-in\">\n            <Login \n              onLogin={onLogin}\n            />\n          </Route>\n          <Route path=\"/sign-up\">\n            <Register \n              onRegister={onRegister}\n            />\n          </Route>\n          <Route>\n            {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-up\"/>}\n          </Route>\n        </Switch>\n        <InfoTooltip\n          isOpen={isInfoTooltipOpen}\n          onClose={closeAllPopups}\n          status={message}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <AddPlacePopup \n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n        <PopupWithForm \n          name='delete-card' \n          title='Вы уверены?'\n          submitButton='Да'\n        />\n        <EditAvatarPopup \n          isOpen={isEditAvatarPopupOpen} \n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar} \n        />\n        <ImagePopup\n          isOpen={selectedCard}\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App.js';\n\n\nReactDOM.render( \n    <React.StrictMode >\n        <BrowserRouter >\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\ndocument.querySelector('.root')\n);"],"sourceRoot":""}